#!/bin/sh
# aginies@suse.com
# quick script to easily start workload on ALP OS

PODMAN=/usr/bin/podman
WORKLOADPATH=registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads

kvm_workload() {
    echo "KVM container workload"
    IMAGE=${WORKLOADPATH}/kvm:latest
    ${PODMAN} container runlabel install ${IMAGE}
    kvm-container-manage.sh create
    kvm-container-manage.sh start
    virt-install.sh
}


yast_ncurses_workload() {
    echo "Yast ncurses"
    IMAGE=${WORKLOADPATH}/yast-mgmt-ncurses:latest
    ${PODMAN} container runlabel run ${IMAGE}
}


cockpit_workload() {
    echo "Cockpit Web Management"
    IMAGE=${WORKLOADPATH}/cockpit-ws:latest
    ${PODMAN} container runlabel install ${IMAGE}
    ${PODMAN} container runlabel --name cockpit-ws run ${IMAGE}
    cat <<EOF

	Go to https://HOSTNAME_OR_IP_OF_ALP_HOST:9090

EOF
}

grafana_workload() {
    echo "Grafana Web interface"
    IMAGE=${WORKLOADPATH}/grafana:latest
    ${PODMAN} container runlabel install ${IMAGE}
    grafana-container-manage.sh create
    grafana-container-manage.sh start
    cat <<EOF

	Go to https://HOSTNAME_OR_IP_OF_ALP_HOST:3000"
	login with admin / admin

EOF
}

check_container() {
	CONTAINER=$1
	TEST=`podman ps --all --format "{{.Names}}" | grep ${CONTAINER}`
	if [ -z "$TEST" ]; then
	    echo "No Previous ${CONTAINER} created"
	else
	    cat <<EOF
	${CONTAINER} already created, to start it:
	podman start ${CONTAINER}
EOF
	    exit 1
	fi
}

usage() {
    cat <<EOF

	This is a DEMO script to TEST some ALP OS workload
	This script doesn't stop your container (podman stop CONTAINER)

    	First arg should be the workload to start
        $0 [kvm|yast|cockpit|grafana]

kvm	
	KVM container workload (libvirtd)
		
yast
	Yast ncurses

cockpit
	Cockpit Web Management (cockpit-ws)
	https://HOSTNAME_OR_IP_OF_ALP_HOST:9090

grafana
	Grafana Web Interface (grafana)
	Go to https://HOSTNAME_OR_IP_OF_ALP_HOST:3000

EOF
	exit 0
}


if [ $# -eq 1 ]; then
    case $1 in
	kvm)
	    check_container libvirtd
	    kvm_workload
	    ;;
	yast)
	    yast_ncurses_workload
	    ;;
	cockpit)
	    check_container cockpit-ws
	    cockpit_workload
	    ;;
	grafana)
	    check_container grafana
	    grafana_workload
	    ;;
	help)
	    usage
	    ;;
    esac
else
    usage
fi
